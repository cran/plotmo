> # test.plotmo.emma.R: regression tests for emma with plotmo
> # Stephen Milborrow, Shrewsbury Nov 2014
> 
> print(R.version.string)
[1] "R version 3.1.2 (2014-10-31)"
> print(citation("emma"))

To cite package 'emma' in publications use:

  Laura Villanova, Kate Smith-Miles and Rob J Hyndman. (2011). emma:
  Evolutionary model-based multiresponse approach. R package version
  0.1-0. http://CRAN.R-project.org/package=emma

A BibTeX entry for LaTeX users is

  @Manual{,
    title = {emma: Evolutionary model-based multiresponse approach},
    author = {Laura Villanova and Kate Smith-Miles and Rob J Hyndman.},
    year = {2011},
    note = {R package version 0.1-0},
    url = {http://CRAN.R-project.org/package=emma},
  }

ATTENTION: This citation information has been auto-generated from the
package DESCRIPTION file and may need manual editing, see
'help("citation")'.

> 
> library(emma)
Loading required package: earth
Loading required package: plotmo
Loading required package: plotrix
Loading required package: clusterSim
Loading required package: cluster
Loading required package: MASS
> set.seed(2014)
> options(warn=1) # print warnings as they occur
> if(!interactive())
+     postscript(paper="letter")
> 
> in.name <- c("x1","x2")
> nlev <- c(10, 10)
> lower <- c(-2.048, -2.048)
> upper <- c(2.048, 2.048)
> out.name <- "y"
> weight <- 1
> C <- 3
> pr.mut <- c(0.1, 0.07, 0.04, rep(0.01, C-3))
> 
> emma(in.name, nlev, lower, upper, out.name, opt = "mn", nd = 8, na = 5,
+     weight, C , w1 = 0.7, w2 = 0.4, c1i = 2.5, c1f = 0.5, c2i = 0.5,
+     c2f = 2.5, b = 5, pr.mut, graph = "yes", fn1 = ackley)
[1] "PERFORM THE FOLLOWING EXPERIMENTS ( t = 0 )"
           x1         x2
29  1.5928889 -1.1377778
17  0.6826667 -1.5928889
62 -1.5928889  0.6826667
31 -2.0480000 -0.6826667
53 -1.1377778  0.2275556
9   1.5928889 -2.0480000
86  0.2275556  1.5928889
56  0.2275556  0.2275556
[1] "PERFORM THE FOLLOWING EXPERIMENTS ( t = 1 )"
           x1         x2
46  0.2275556 -0.2275556
54 -0.6826667  0.2275556
75 -0.2275556  1.1377778
37  0.6826667 -0.6826667
63 -1.1377778  0.6826667
[1] "PERFORM THE FOLLOWING EXPERIMENTS ( t = 2 )"
           x1         x2
36  0.2275556 -0.6826667
47  0.6826667 -0.2275556
26  0.2275556 -1.1377778
55 -0.2275556  0.2275556
39  1.5928889 -0.6826667
Using env attr(object$terms, ".Environment")

--get.plotmo.x for earth object

get.data.for.formula: using x from object$data 
got x with colnames from object$call$formula

x[18,2]:
            x1         x2
29   1.5928889 -1.1377778
17   0.6826667 -1.5928889
62  -1.5928889  0.6826667
... -2.0480000 -0.6826667
39   1.5928889 -0.6826667

nlevels: x1=8 x2=9 

--get.plotmo.y for earth object

got y from object$y
get.plotmo.y column "data.matrix(input[,3:3])" returned length 18 min 2.457189 max 7.798963
             value 6.643627 6.528924 6.528924 6.667417 4.261612 7.798963 6.08188 2.457189 2.457189 3.779749 ...

clip.limits 2.457189 7.798963 

--plot.degree1(draw.plot=FALSE)

plotmo.predict(type="response") for degree1 plot "x1" with newdata[8,2]:
            x1         x2
1   -2.0480000 -0.2275556
2   -1.5928889 -0.2275556
3   -1.1377778 -0.2275556
... -0.6826667 -0.2275556
8    1.5928889 -0.2275556

predict.earth(xgrid, type="response") column "data.matrix(input[,3:3])" returned length 8 min 2.932085 max 6.165878
                                      value 6.165878 5.51912 4.872361 4.225602 3.578844 2.932085 3.7684 5.441031 

ylim 2.932085 6.165878 

 grid:    x1         x2
   0.2275556 -0.2275556

$xpop
           x1         x2
29  1.5928889 -1.1377778
17  0.6826667 -1.5928889
62 -1.5928889  0.6826667
31 -2.0480000 -0.6826667
53 -1.1377778  0.2275556
9   1.5928889 -2.0480000
86  0.2275556  1.5928889
56  0.2275556  0.2275556
46  0.2275556 -0.2275556
54 -0.6826667  0.2275556
75 -0.2275556  1.1377778
37  0.6826667 -0.6826667
63 -1.1377778  0.6826667
36  0.2275556 -0.6826667
47  0.6826667 -0.2275556
26  0.2275556 -1.1377778
55 -0.2275556  0.2275556
39  1.5928889 -0.6826667

$ypop
         y1
29 6.643627
17 6.528924
62 6.528924
31 6.667417
53 4.261612
9  7.798963
86 6.081880
56 2.457189
46 2.457189
54 3.779749
75 4.261612
37 4.607458
63 5.014016
36 3.779749
47 3.779749
26 4.261612
55 2.457189
39 6.528924

$xspace
            x1         x2
1   -2.0480000 -2.0480000
2   -1.5928889 -2.0480000
3   -1.1377778 -2.0480000
4   -0.6826667 -2.0480000
5   -0.2275556 -2.0480000
6    0.2275556 -2.0480000
7    0.6826667 -2.0480000
8    1.1377778 -2.0480000
9    1.5928889 -2.0480000
10   2.0480000 -2.0480000
11  -2.0480000 -1.5928889
12  -1.5928889 -1.5928889
13  -1.1377778 -1.5928889
14  -0.6826667 -1.5928889
15  -0.2275556 -1.5928889
16   0.2275556 -1.5928889
17   0.6826667 -1.5928889
18   1.1377778 -1.5928889
19   1.5928889 -1.5928889
20   2.0480000 -1.5928889
21  -2.0480000 -1.1377778
22  -1.5928889 -1.1377778
23  -1.1377778 -1.1377778
24  -0.6826667 -1.1377778
25  -0.2275556 -1.1377778
26   0.2275556 -1.1377778
27   0.6826667 -1.1377778
28   1.1377778 -1.1377778
29   1.5928889 -1.1377778
30   2.0480000 -1.1377778
31  -2.0480000 -0.6826667
32  -1.5928889 -0.6826667
33  -1.1377778 -0.6826667
34  -0.6826667 -0.6826667
35  -0.2275556 -0.6826667
36   0.2275556 -0.6826667
37   0.6826667 -0.6826667
38   1.1377778 -0.6826667
39   1.5928889 -0.6826667
40   2.0480000 -0.6826667
41  -2.0480000 -0.2275556
42  -1.5928889 -0.2275556
43  -1.1377778 -0.2275556
44  -0.6826667 -0.2275556
45  -0.2275556 -0.2275556
46   0.2275556 -0.2275556
47   0.6826667 -0.2275556
48   1.1377778 -0.2275556
49   1.5928889 -0.2275556
50   2.0480000 -0.2275556
51  -2.0480000  0.2275556
52  -1.5928889  0.2275556
53  -1.1377778  0.2275556
54  -0.6826667  0.2275556
55  -0.2275556  0.2275556
56   0.2275556  0.2275556
57   0.6826667  0.2275556
58   1.1377778  0.2275556
59   1.5928889  0.2275556
60   2.0480000  0.2275556
61  -2.0480000  0.6826667
62  -1.5928889  0.6826667
63  -1.1377778  0.6826667
64  -0.6826667  0.6826667
65  -0.2275556  0.6826667
66   0.2275556  0.6826667
67   0.6826667  0.6826667
68   1.1377778  0.6826667
69   1.5928889  0.6826667
70   2.0480000  0.6826667
71  -2.0480000  1.1377778
72  -1.5928889  1.1377778
73  -1.1377778  1.1377778
74  -0.6826667  1.1377778
75  -0.2275556  1.1377778
76   0.2275556  1.1377778
77   0.6826667  1.1377778
78   1.1377778  1.1377778
79   1.5928889  1.1377778
80   2.0480000  1.1377778
81  -2.0480000  1.5928889
82  -1.5928889  1.5928889
83  -1.1377778  1.5928889
84  -0.6826667  1.5928889
85  -0.2275556  1.5928889
86   0.2275556  1.5928889
87   0.6826667  1.5928889
88   1.1377778  1.5928889
89   1.5928889  1.5928889
90   2.0480000  1.5928889
91  -2.0480000  2.0480000
92  -1.5928889  2.0480000
93  -1.1377778  2.0480000
94  -0.6826667  2.0480000
95  -0.2275556  2.0480000
96   0.2275556  2.0480000
97   0.6826667  2.0480000
98   1.1377778  2.0480000
99   1.5928889  2.0480000
100  2.0480000  2.0480000

$yspace
            y
1    8.974869
2    8.328111
3    7.681352
4    7.034594
5    6.387835
6    5.741076
7    6.577392
8    7.413707
9    7.798963
10   9.086337
11   8.272621
12   7.625863
13   6.979104
14   6.332346
15   5.685587
16   5.038829
17   6.528924
18   6.711459
19   7.547774
20   8.384089
21   7.570374
22   6.923615
23   6.276857
24   5.630098
25   4.983339
26   4.261612
27   5.172896
28   6.009211
29   6.643627
30   7.681841
31   6.667417
32   6.221367
33   5.574609
34   4.927850
35   4.281092
36   3.779749
37   4.607458
38   5.306963
39   6.528924
40   6.979594
41   6.165878
42   5.519120
43   4.872361
44   4.225602
45   3.578844
46   2.457189
47   3.779749
48   4.604716
49   5.441031
50   6.277346
51   5.463630
52   4.816872
53   4.261612
54   3.779749
55   2.457189
56   2.457189
57   3.066153
58   3.902468
59   4.738783
60   5.575098
61   6.589105
62   6.528924
63   5.014016
64   4.648829
65   4.002070
66   3.355312
67   4.191627
68   5.027942
69   5.864257
70   6.700573
71   7.714579
72   7.067821
73   6.421062
74   5.774304
75   4.261612
76   4.480786
77   5.317102
78   6.153417
79   6.989732
80   7.826047
81   8.840054
82   8.193295
83   7.546537
84   6.899778
85   6.253019
86   6.081880
87   6.442576
88   7.278891
89   8.115206
90   8.951522
91   9.965528
92   9.318770
93   8.672011
94   8.025253
95   7.378494
96   6.731735
97   7.568051
98   8.404366
99   9.240681
100 10.076996

$opt
[1] "mn"

$nd
[1] 8

$na
[1] 5

$tested
 [1] 29 17 62 31 53  9 86 56 46 54 75 37 63 36 47 26 55 39

$time
[1] 2

$weight
[1] 1

$Gb
46 
46 

$Pb
[1] 46 54 75 37 56

$Gb.arch
   46 
56 46 

$Pb.arch
 [1] 17 62 53 86 56 46 54 75 37 56

$v
            x1         x2
17  0.04126792 -0.1650717
62  1.21231800 -0.5234571
53  0.44092130 -1.9421147
86 -0.64737158  1.0191149
56  2.66968765 -1.4270721

$sam.x
[1] 36 47 26 55 39

$add
[1] 0

attr(,"class")
[1] "emma"
> 
> if(!interactive()) {
+     dev.off()         # finish postscript plot
+     q(runLast=FALSE)  # needed else R prints the time on exit (R2.5 and higher) which messes up the diffs
+ }
