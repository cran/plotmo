> # test.plotmo.center.R: test plotmo's center and ndiscrete args
> # Stephen Milborrow, Berea Apr 2011
> 
> library(rpart.plot)
Loading required package: rpart
> library(plotmo)
> library(earth)
Loading required package: plotrix
> source("fast.postscript.R")
> data(etitanic)
> options(warn=1) # print warnings as they occur
> if(!interactive())
+     fast.postscript(paper="letter")
Opening Rplots.ps 
> et <- etitanic[, c("survived", "pclass", "sex", "age")]
> et$pclassn <- as.numeric(et$pclass)
> et <- et[c(30:80,330:380,630:680), ]
> 
> par(mfrow=c(3,3))
> par(mar=c(3, 3.5, 3, 0.5))
> par(mgp=c(1.5, .5, 0))
> 
> ndiscrete <- 0
> 
> #--- row 1
> 
> set.seed(844)
> a1 <- lm(survived~pclassn+sex, data=et)
> plotmo(a1, all2=T, do.par=F, degree1=NA, degree2=1, center=TRUE, clip=F, 
+        trace=1,
+        main="a1: survived~pclassn+sex\n(default ndiscrete)",
+        col.response=ifelse(et$survived, "black", "red"),
+        pch.response=".", cex.response=2.5, jitter.response=.4, lab=c(1,1,1))

--get.plotmo.x for lm object

get.data.for.formula: using x from "et" passed to lm 
got x with colnames from object$call$formula

x[153,2]:
    pclassn    sex
31        1   male
32        1   male
33        1 female
...       1 female
741       3   male

factors: sex 

nlevels: pclassn=3 sex=2 

--get.plotmo.y for lm object

get.data.for.formula: using y from "et" passed to lm 
got y from object$call$formula
get.plotmo.y returned length 153 min 0 max 1
             value 0 1 1 1 0 1 1 0 0 1 ...
centered y length  153 min -0.4117647 max 0.5882353
           value -0.4117647 0.5882353 0.5882353 0.5882353 -0.4117647 0.5882353 0.5882353 -0.4117647 -0.4117647 0.5882353 ...

--plot.degree2(draw.plot=FALSE)

plotmo.predict(type="response") for degree2 plot "pclassn:sex" with newdata[6,2]:
    pclassn    sex
1         1 female
2         2 female
3         3 female
...       1   male
3.1       3   male

factors: sex 

predict.lm(xgrid, type="response") returned length 6 min 0.03115047 max 0.9462358
                                   value 0.9462358 0.7757674 0.6052991 0.3720872 0.2016188 0.03115047 
centered y.predict length  24 min -0.4575426 max 0.4575426
                   value 0.4575426 0.4575426 0.2870743 0.2870743 0.116606 0.116606 0.4575426 0.4575426 0.2870743 0.2870743 ...

ylim -0.4575426 0.5882353 
persp(pclassn:sex) theta 145 ylim -0.458 0.588 cex 0.66
> 
> set.seed(844)
> plotmo(a1, degree1=1, all2=T, degree2=0, do.par=F, xflip=T, center=TRUE, clip=F, 
+        trace=2,
+        grid.levels=list(sex="f"), ndiscrete=ndiscrete,
+        main="pclassn with sex=\"female\"",
+        col.smooth="lightblue",  lwd.smooth=2,
+        col.response=ifelse(et$survived, "black", "red"),
+        pch.response=".", cex.response=2.5, jitter.response=.4)

--get.plotmo.x for lm object

formula survived ~ pclassn + sex
stripped formula survived~pclassn+sex
get.data.for.formula: using x from "et" passed to lm 
about to eval model.frame(formula=survived~pclassn+sex, data=structure(list(
    survived=c(0L, 1L, 1L, 1L, 0L, 1L, 1L, 0L, 0L, 1L, 1L, 
    1L, 1L, 0L, 1L, 1L, 1L, 1L, 0L, 0L, 0L, 1L, 1L, 1L, 1L, 0L, 
    0L, 1L, 0L, 1L, 1L, 1L, 1L, 1L, 1L, 0L, 1L, 1L, 0L, 1L, 0L, 
    1L, 1L, 0L, 1L, 1L, 0L, 1L, 1L, 1L, 1L, 0L, 1L, 1L, 0L, 1L, 
    0L, 0L, 1L, 1L, 0L, 1L, 1L, 0L, 0L, 1L, 0L, 1L, 1L, 0L, 0L, 
    0L, 1L, 0L, 0L, 1L, 1L, 0L, 1L, 0L, 1L, 1L, 1L, 0L, 0L, 0L, 
    0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, ...
got x with colnames from object$call$formula

x[153,2]:
    pclassn    sex
31        1   male
32        1   male
33        1 female
...       1 female
741       3   male

factors: sex 

nlevels: pclassn=3 sex=2 

--get.plotmo.y for lm object

formula survived ~ pclassn + sex
stripped formula survived~pclassn+sex
get.data.for.formula: using y from "et" passed to lm 
about to eval model.frame(formula=survived~pclassn+sex, data=structure(list(
    survived=c(0L, 1L, 1L, 1L, 0L, 1L, 1L, 0L, 0L, 1L, 1L, 
    1L, 1L, 0L, 1L, 1L, 1L, 1L, 0L, 0L, 0L, 1L, 1L, 1L, 1L, 0L, 
    0L, 1L, 0L, 1L, 1L, 1L, 1L, 1L, 1L, 0L, 1L, 1L, 0L, 1L, 0L, 
    1L, 1L, 0L, 1L, 1L, 0L, 1L, 1L, 1L, 1L, 0L, 1L, 1L, 0L, 1L, 
    0L, 0L, 1L, 1L, 0L, 1L, 1L, 0L, 0L, 1L, 0L, 1L, 1L, 0L, 0L, 
    0L, 1L, 0L, 0L, 1L, 1L, 0L, 1L, 0L, 1L, 1L, 1L, 0L, 0L, 0L, 
    0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, ...
got y from object$call$formula
get.plotmo.y returned length 153 min 0 max 1
             value 0 1 1 1 0 1 1 0 0 1 ...
centered y length  153 min -0.4117647 max 0.5882353
           value -0.4117647 0.5882353 0.5882353 0.5882353 -0.4117647 0.5882353 0.5882353 -0.4117647 -0.4117647 0.5882353 ...

--get.plotmo.singles for lm object

singles: 1 pclassn 

--get.plotmo.pairs for lm object

pairs:
     [,1] [,2]

--plot.degree1(draw.plot=FALSE)

plotmo.predict(type="response") for degree1 plot "pclassn" with newdata[3,2]:
  pclassn    sex
1       1 female
2       2 female
3       3 female

factors: sex 

predict.lm(xgrid, type="response") returned length 3 min 0.6052991 max 0.9462358
                                   value 0.9462358 0.7757674 0.6052991 
centered y.predict length  3 min -0.1704683 max 0.1704683
                   value 0.1704683 0 -0.1704683 

ylim -0.4117647 0.5882353 

--plot.degree1(draw.plot=TRUE)

 grid:    pclassn    sex
                2 female

> 
> set.seed(844)
> plotmo(a1, degree1=1, all2=T, degree2=0, do.par=F, xflip=T, center=TRUE, clip=F,
+        grid.levels=list(sex="m"), ndiscrete=ndiscrete,
+        main="pclassn with sex=\"male\"",
+        col.smooth="lightblue", lwd.smooth=2,
+        col.response=ifelse(et$survived, "black", "red"),
+        pch.response=".", cex.response=2.5, jitter.response=.4)

 grid:    pclassn  sex
                2 male

> 
> #--- row 2
> 
> a2 <- lm(survived~pclassn*sex, data=et)
> set.seed(844)
> plotmo(a2, all2=T, do.par=F, degree2=1, degree1=0, center=TRUE, clip=F,
+        main="a2: survived~pclassn*sex\n(default ndiscrete)")
> 
> set.seed(844)
> plotmo(a2, degree1=1, all2=T, degree2=0, do.par=F, xflip=T, center=TRUE, clip=F,
+        grid.levels=list(sex="f"), ndiscrete=ndiscrete,
+        main="pclassn with sex=\"female\"",
+        col.smooth="lightblue",  lwd.smooth=2,
+        col.response=ifelse(et$survived, "black", "red"),
+        pch.response=".", cex.response=2.5, jitter.response=.4)

 grid:    pclassn    sex
                2 female

> 
> set.seed(844)
> plotmo(a2, degree1=1, all2=T, degree2=0, do.par=F, xflip=T, center=TRUE, clip=F,
+        grid.levels=list(sex="m"), ndiscrete=ndiscrete,
+        main="pclassn with sex=\"male\"",
+        col.smooth="lightblue",  lwd.smooth=2,
+        col.response=ifelse(et$survived, "black", "red"),
+        pch.response=".", cex.response=2.5, jitter.response=.4)

 grid:    pclassn  sex
                2 male

> 
> #--- row 3
> 
> par(mfg=c(3,2))
> a3 <- lm(survived~pclassn, data=et)
> set.seed(844)
> plotmo(a3, do.par=F, xflip=T, center=TRUE, clip=F, ndiscrete=ndiscrete,
+        main="a3: survived~pclassn", col.degree1=1,
+        col.smooth="lightblue",  lwd.smooth=2,
+        col.response=ifelse(et$survived, "black", "red"),
+        pch.response=".", cex.response=2.5, jitter.response=.4)

 grid:    pclassn
                2

> 
> plot(0, 0, type="n", axes=FALSE, xlab="", ylab="")
> 
> #--- row 1
> 
> a4 <- earth(survived~pclassn+age, data=et, degree=2)
> 
> set.seed(844)
> plotmo(a4, do.par=F, center=TRUE, clip=F, ylim=c(-.6,.7),
+        main="earth: survived~pclassn+age\n(default ndiscrete)", degree1=0, all2=T)
> 
> set.seed(844)
> plotmo(a4, do.par=F, xflip=F, all1=T, center=TRUE, clip=F, ylim=c(-.6,.7),
+        main="a4, age with pclassn=1st", ndiscrete=ndiscrete,
+        degree2=0, degree1=2,
+        # grid.levels=list(pclassn="1st"),
+        grid.levels=list(pclassn=1),
+        col.smooth="lightblue",  lwd.smooth=2,
+        col.response=ifelse(et$survived, "black", "red"),
+        pch.response=".", cex.response=2.5, jitter.response=.4)

 grid:    pclassn age
                1  29

> 
> set.seed(844)
> plotmo(a4, do.par=F, xflip=F, all1=T, center=TRUE, clip=F, ylim=c(-.6,.7),
+        main="age with pclassn=3rd", ndiscrete=ndiscrete,
+        degree2=0, degree1=2,
+        grid.levels=list(pclassn=3),
+        col.smooth="lightblue",  lwd.smooth=2,
+        col.response=ifelse(et$survived, "black", "red"),
+        pch.response=".", cex.response=2.5, jitter.response=.4)

 grid:    pclassn age
                3  29

> 
> #--- row 2
> 
> set.seed(844)
> plotmo(a4, do.par=F, center=TRUE, clip=F, type2="im",
+        main="a4 earth: survived~pclassn+age\n(default ndiscrete)", degree1=0, all2=T, yflip=T,
+        col.response=ifelse(et$survived, 1, "red"),
+        col.image=gray(seq(6, 10, length=10) / 10), xflip=T,
+        pch.response=".", cex.response=2)
> 
> set.seed(844)
> plotmo(a4, do.par=F, xflip=F, all1=T, center=TRUE, clip=F,
+        main="pclassn with age=10", ndiscrete=ndiscrete,
+        degree2=0, degree1=1,
+        grid.levels=list(age=10),
+        col.smooth="lightblue",  lwd.smooth=2,
+        col.response=ifelse(et$survived, "black", "red"),
+        pch.response=".", cex.response=2.5, jitter.response=.3)

 grid:    pclassn age
                2  10

> 
> set.seed(844)
> plotmo(a4, do.par=F, xflip=F, all1=T, center=TRUE, clip=F,
+        main="pclassn with age=40",  ndiscrete=ndiscrete,
+        degree2=0, degree1=1,
+        grid.levels=list(age=40),
+        col.smooth="lightblue",  lwd.smooth=2,
+        col.response=ifelse(et$survived, "black", "red"),
+        pch.response=".", cex.response=2.5, , jitter.response=.3)

 grid:    pclassn age
                2  40

> 
> if(!interactive()) {
+     dev.off()         # finish postscript plot
+     q(runLast=FALSE)  # needed else R prints the time on exit (R2.5 and higher) which messes up the diffs
+ }
